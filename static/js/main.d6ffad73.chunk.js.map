{"version":3,"sources":["trivia.png","actions/fetchToken.js","actions/types.js","services/apiRequest.js","actions/changeUserInfo.js","actions/resetTrivia.js","actions/fetchTrivia.js","actions/resetUser.js","pages/Login.jsx","actions/changeCategory.js","actions/changeDifficulty.js","actions/changeType.js","pages/Settings.jsx","components/Footer.jsx","components/Header.jsx","components/TriviaHeader.jsx","components/Loading.jsx","actions/changeScore.js","actions/addAssertion.js","pages/Game.jsx","components/RankLine.jsx","pages/Ranking.jsx","pages/Feedback.jsx","serviceWorker.js","reducers/tokenReducer.js","reducers/gameReducer.js","reducers/userReducer.js","reducers/settingReducer.js","reducers/index.js","store/index.js","index.js","App.js"],"names":["module","exports","fetchToken","dispatch","type","a","async","fetch","then","token","json","ok","Promise","resolve","reject","data","payload","requestTokenSuccess","error","receiveTokenFailure","message","actionName","name","gravatarEmail","resetTrivia","fetchTrivia","category","difficulty","trivia","getTrivia","requestTriviaSuccess","receiveTriviaFailure","resetUser","Login","props","state","enableButton","handleChange","bind","createInputPlayerName","createInputEmail","cardButtons","fetchs","this","resetTrv","resetUsr","e","setState","target","id","value","className","onChange","required","data-testid","htmlFor","fetchTkn","fetchTrv","localStorage","setItem","JSON","stringify","parse","getItem","changeUser","to","onClick","disabled","style","verticalAlign","Component","connect","tokenReducer","tokenIsFetching","gameIsFetching","gameReducer","responseCode","response_code","results","player","userReducer","settingReducer","bindActionCreators","changeUserInfo","changeCategory","changeDifficulty","changeType","Settings","categories","setCategories","categorySelect","typeSelect","difficultSelect","trivia_categories","changeCtgry","map","el","key","changeTyp","changeDffclty","Footer","href","Header","children","src","logo","alt","TriviaHeader","score","trimmedAndLowercasedMail","trim","toLocaleLowerCase","width","marginLeft","MD5","defaultProps","Loading","changeScore","addAssertion","Game","intervalId","incorrectAnswerClass","correctAnswerClass","randomIndexes","timer","disableButton","questionIndex","nextButtonClass","createAnswersButtons","changeClass","createCorrectAnswerIndexes","timerCountdown","incorrectAnswerButton","correctAnswerButton","nextQuestion","nextButton","addScoreRanking","prevProps","length","clearInterval","setInterval","answer","index","he","decode","changeScr","addAssert","correct_answer","hard","medium","easy","calculateScore","answers","incorrect_answers","splice","Object","values","result","max","Math","round","random","picture","date","Date","ranking","push","history","question","withRouter","RankLine","margin","Ranking","rankedLadder","sort","rankA","rankB","Feedback","assertions","answerTitle","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6ffad73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";","import { getToken } from '../services/apiRequest';\nimport { REQUEST_TOKEN, RECEIVE_TOKEN_SUCCESS, RECEIVE_TOKEN_FAILURE } from './types';\n\nconst requestToken = () => ({\n  type: REQUEST_TOKEN,\n});\n\nconst requestTokenSuccess = (data) => ({\n  type: RECEIVE_TOKEN_SUCCESS,\n  payload: data,\n});\n\nconst receiveTokenFailure = (error) => ({\n  type: RECEIVE_TOKEN_FAILURE,\n  payload: error,\n});\n\nexport default function fetchToken() {\n  return (dispatch) => {\n    dispatch(requestToken());\n    return getToken()\n      .then(\n        (data) => dispatch(requestTokenSuccess(data)),\n        (error) => dispatch(receiveTokenFailure(error.message)),\n      );\n  };\n}\n","export const REQUEST_TOKEN = 'REQUEST_TOKEN';\nexport const RECEIVE_TOKEN_SUCCESS = 'RECEIVE_TOKEN_SUCCESS';\nexport const RECEIVE_TOKEN_FAILURE = 'RECEIVE_TOKEN_FAILURE';\nexport const REQUEST_TRIVIA = 'REQUEST_TRIVIA';\nexport const RECEIVE_TRIVIA_SUCCESS = 'RECEIVE_TRIVIA_SUCCESS';\nexport const RECEIVE_TRIVIA_FAILURE = 'RECEIVE_TRIVIA_FAILURE';\nexport const CHANGE_USER_INFO = 'CHANGE_USER_INFO';\nexport const CHANGE_SCORE = 'CHANGE_SCORE';\nexport const ADD_ASSERTION = 'ADD_ASSERTION';\nexport const RESET_TRIVIA = 'RESET_TRIVIA';\nexport const RESET_USER = 'RESET_USER';\nexport const CHANGE_CATEGORY = 'CHANGE_CATEGORY';\nexport const CHANGE_DIFFICULTY = 'CHANGE_DIFFICULTY';\nexport const CHANGE_TYPE = 'CHANGE_TYPE';\n","export async function getToken() {\n  return fetch('https://opentdb.com/api_token.php?command=request')\n    .then((token) => token\n      .json()\n      .then((json) => (token.ok ? Promise.resolve(json) : Promise.reject(json))));\n}\n\nexport async function getTrivia(token, category, difficulty, type) {\n  return fetch(`https://opentdb.com/api.php?amount=5&token=${token}&category=${category}&difficulty=${difficulty}&type=${type}`)\n    .then((trivia) => trivia\n      .json()\n      .then((json) => (trivia.ok ? Promise.resolve(json) : Promise.reject(json))));\n}\n\nexport async function getCategory() {\n  return fetch('https://opentdb.com/api_category.php')\n    .then((category) => category\n      .json()\n      .then((json) => (category.ok ? Promise.resolve(json) : Promise.reject(json))));\n}\n","import { CHANGE_USER_INFO } from './types';\n\nconst actionName = (name, gravatarEmail) => ({\n  type: CHANGE_USER_INFO,\n  name,\n  gravatarEmail,\n});\n\nexport default actionName;\n","import { RESET_TRIVIA } from './types';\n\nconst resetTrivia = () => ({ type: RESET_TRIVIA });\n\nexport default resetTrivia;\n","import { getTrivia } from '../services/apiRequest';\nimport { REQUEST_TRIVIA, RECEIVE_TRIVIA_SUCCESS, RECEIVE_TRIVIA_FAILURE } from './types';\n\nconst requestTrivia = () => ({\n  type: REQUEST_TRIVIA,\n});\n\nconst requestTriviaSuccess = (data) => ({\n  type: RECEIVE_TRIVIA_SUCCESS,\n  payload: data,\n});\n\nconst receiveTriviaFailure = (error) => ({\n  type: RECEIVE_TRIVIA_FAILURE,\n  payload: error,\n});\n\nexport default function fetchTrivia(token, category, difficulty, type) {\n  return (dispatch) => {\n    dispatch(requestTrivia());\n    return getTrivia(token, category, difficulty, type)\n      .then(\n        (data) => dispatch(requestTriviaSuccess(data)),\n        (error) => dispatch(receiveTriviaFailure(error.message)),\n      );\n  };\n}\n","import { RESET_USER } from './types';\n\nconst resetUser = () => ({ type: RESET_USER });\n\nexport default resetUser;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport fetchToken from '../actions/fetchToken';\nimport changeUserInfo from '../actions/changeUserInfo';\nimport resetTrivia from '../actions/resetTrivia';\nimport fetchTrivia from '../actions/fetchTrivia';\nimport resetUser from '../actions/resetUser';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      gravatarEmail: '',\n      enableButton: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.createInputPlayerName = this.createInputPlayerName.bind(this);\n    this.createInputEmail = this.createInputEmail.bind(this);\n    this.cardButtons = this.cardButtons.bind(this);\n    this.fetchs = this.fetchs.bind(this);\n  }\n\n  componentDidMount() {\n    const { resetTrv, resetUsr } = this.props;\n    resetTrv();\n    resetUsr();\n  }\n\n  async handleChange(e) {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n    const { name, gravatarEmail } = this.state;\n    if (name && gravatarEmail) {\n      this.setState({ enableButton: false });\n    } else {\n      this.setState({ enableButton: true });\n    }\n  }\n\n  createInputPlayerName() {\n    const { name } = this.state;\n    return (\n      <span>\n        <input\n          className=\"white-text\"\n          value={name}\n          onChange={(e) => this.handleChange(e)}\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"inputPlayerName\"\n          data-testid=\"input-player-name\"\n        />\n        <label htmlFor=\"inputPlayerName\">Name</label>\n      </span>\n    );\n  }\n\n  createInputEmail() {\n    const { gravatarEmail } = this.state;\n    return (\n      <span>\n        <input\n          className=\"white-text\"\n          value={gravatarEmail}\n          onChange={(e) => this.handleChange(e)}\n          required\n          type=\"text\"\n          id=\"gravatarEmail\"\n          name=\"gravatarEmail\"\n          data-testid=\"input-gravatar-email\"\n        />\n        <label htmlFor=\"gravatarEmail\">E-Mail</label>\n      </span>\n    );\n  }\n\n  async fetchs() {\n    const { fetchTkn, fetchTrv, category, difficulty, type } = this.props;\n    await fetchTkn().then((token) => localStorage.setItem('token', JSON.stringify(token.payload)));\n    const { token } = JSON.parse(localStorage.getItem('token'));\n    fetchTrv(token, category, difficulty, type);\n  }\n\n  cardButtons() {\n    const { changeUser } = this.props;\n    const { enableButton, name, gravatarEmail } = this.state;\n    return (\n      <div className=\"row\">\n        <Link to=\"/game\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              changeUser(name, gravatarEmail);\n              this.fetchs();\n            }}\n            disabled={enableButton}\n            className=\"waves-effect deep-orange btn col s4 offset-s4\"\n            data-testid=\"btn-play\"\n          >\n            Play\n          </button>\n        </Link>\n        <Link to=\"/settings\" data-testid=\"btn-settings\" className=\"col offset-s3 s1\">\n          <i className=\"material-icons deep-orange-text\" style={{ verticalAlign: '-12px' }}>\n            settings\n          </i>\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col s6 offset-s3\">\n          <div className=\"card black-coral radius-border-10\">\n            <div className=\"card-content white-text\">\n              {this.createInputPlayerName()}\n              {this.createInputEmail()}\n              {this.cardButtons()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  changeUser: PropTypes.func.isRequired,\n  resetTrv: PropTypes.func.isRequired,\n  resetUsr: PropTypes.func.isRequired,\n  fetchTkn: PropTypes.func.isRequired,\n  fetchTrv: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n  difficulty: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.tokenReducer.token.token,\n  tokenIsFetching: state.tokenReducer.tokenIsFetching,\n  gameIsFetching: state.gameReducer.gameIsFetching,\n  responseCode: state.gameReducer.trivia.response_code,\n  results: state.gameReducer.trivia.results,\n  player: state.userReducer.player,\n  category: state.settingReducer.category,\n  difficulty: state.settingReducer.difficulty,\n  type: state.settingReducer.type,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  {\n    fetchTkn: fetchToken,\n    fetchTrv: fetchTrivia,\n    changeUser: changeUserInfo,\n    resetTrv: resetTrivia,\n    resetUsr: resetUser,\n  }, dispatch,\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { CHANGE_CATEGORY } from './types';\n\nconst changeCategory = (payload) => ({\n  type: CHANGE_CATEGORY,\n  payload,\n});\n\nexport default changeCategory;\n","import { CHANGE_DIFFICULTY } from './types';\n\nconst changeDifficulty = (payload) => ({\n  type: CHANGE_DIFFICULTY,\n  payload,\n});\n\nexport default changeDifficulty;\n","import { CHANGE_TYPE } from './types';\n\nconst changeType = (payload) => ({\n  type: CHANGE_TYPE,\n  payload,\n});\n\nexport default changeType;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { getCategory } from '../services/apiRequest';\nimport changeCategory from '../actions/changeCategory';\nimport changeDifficulty from '../actions/changeDifficulty';\nimport changeType from '../actions/changeType';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n    };\n    this.setCategories = this.setCategories.bind(this);\n    this.categorySelect = this.categorySelect.bind(this);\n    this.typeSelect = this.typeSelect.bind(this);\n    this.difficultSelect = this.difficultSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.setCategories();\n  }\n\n  async setCategories() {\n    const categories = await getCategory();\n    this.setState({\n      categories: categories.trivia_categories,\n    });\n  }\n\n  categorySelect() {\n    const { categories } = this.state;\n    const { changeCtgry } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"category\">Category</label>\n        <div className=\"input-field col s12\">\n          <select\n            onChange={(e) => changeCtgry(e.target.value)}\n            className=\"browser-default\"\n            name=\"category\"\n            id=\"category\"\n          >\n            <option value=\"\" disabled>\n              Choose your option\n            </option>\n            <option value=\"\">All</option>\n            {categories.map((el) => (\n              <option key={el.id} value={el.id}>{el.name}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  typeSelect() {\n    const { changeTyp } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"type\">Type</label>\n        <div className=\"input-field col s12\">\n          <select onChange={(e) => changeTyp(e.target.value)} className=\"browser-default\" id=\"type\">\n            <option value=\"\" disabled>\n              Choose your option\n            </option>\n            <option value=\"\">All</option>\n            <option value=\"multiple\">Multiple Choice</option>\n            <option value=\"boolean\">True or False</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  difficultSelect() {\n    const { changeDffclty } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"difficult\">Difficult</label>\n        <div className=\"input-field col s12\">\n          <select\n            onChange={(e) => changeDffclty(e.target.value)}\n            className=\"browser-default\"\n            id=\"difficult\"\n          >\n            <option value=\"\" disabled>\n              Choose your option\n            </option>\n            <option value=\"\">All</option>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row black-coral white-text radius-border-10\">\n          <div className=\"center-align\">\n            <h3 data-testid=\"settings-title\">Settings</h3>\n            <div className=\"col s6 offset-s3\">\n              {this.categorySelect()}\n              {this.difficultSelect()}\n              {this.typeSelect()}\n              <Link className=\"waves-effect deep-orange btn col s4 offset-s4 margin-20p\" to=\"/\">\n                Back\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  { changeCtgry: changeCategory, changeDffclty: changeDifficulty, changeTyp: changeType },\n  dispatch,\n);\n\nSettings.propTypes = {\n  changeCtgry: PropTypes.func.isRequired,\n  changeTyp: PropTypes.func.isRequired,\n  changeDffclty: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Settings);\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      <p className=\"center-align white-text\">\n        Developed by&nbsp;\n        <a href=\"https://www.linkedin.com/in/henriquerezende/\">Henrique de Rezende Costa,&nbsp;</a>\n        <a href=\"https://www.linkedin.com/in/henrique-ba%C3%AAta-leite-785a4b15a/\">\n          Henrique Baêta Leite and&nbsp;\n        </a>\n        <a href=\"https://www.linkedin.com/in/tales-villas-boas-dos-santos-a7533766/\">\n          Tales Villas Boas dos Santos\n        </a>\n      </p>\n    </footer>\n  );\n}\n\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport logo from '../trivia.png';\n\nfunction Header({ children }) {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <Link to=\"/\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </Link>\n      </header>\n      {children}\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MD5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\n\nconst TriviaHeader = ({ score, name, gravatarEmail }) => {\n  const trimmedAndLowercasedMail = gravatarEmail.trim().toLocaleLowerCase();\n  return (\n    <nav>\n      <div className=\"black-coral-2 \">\n        <img\n          className=\"circle\"\n          style={{ width: '50px', verticalAlign: '-20px', marginLeft: '10px' }}\n          src={`https://www.gravatar.com/avatar/${MD5(trimmedAndLowercasedMail)}`}\n          alt=\"Gravatar profile\"\n          data-testid=\"header-profile-picture\"\n        />\n        <ul className=\"right\">\n          <li>\n            <span data-testid=\"header-player-name\" className=\"margin-10p\">\n              {`Player: ${name}`}\n            </span>\n          </li>\n          <li>\n            <span className=\"margin-10p\">\n              Score:\n              <span data-testid=\"header-score\">\n                {` ${score}`}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = ({\n  userReducer: {\n    player: { score, name, gravatarEmail },\n  },\n}) => ({\n  score,\n  name,\n  gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(TriviaHeader);\n\nTriviaHeader.propTypes = {\n  score: PropTypes.number,\n  name: PropTypes.string,\n  gravatarEmail: PropTypes.string,\n};\n\nTriviaHeader.defaultProps = {\n  score: 0,\n  name: '',\n  gravatarEmail: '',\n};\n","import React from 'react';\n\nfunction Loading() {\n  return (\n    <div className=\"row\">\n      <div className=\"loading col offset-s6\" />\n    </div>\n  );\n}\n\nexport default Loading;\n","import { CHANGE_SCORE } from './types';\n\nconst changeScore = (score) => ({\n  type: CHANGE_SCORE,\n  score,\n});\n\nexport default changeScore;\n","import { ADD_ASSERTION } from './types';\n\nconst addAssertion = () => ({\n  type: ADD_ASSERTION,\n});\n\nexport default addAssertion;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MD5 from 'crypto-js/md5';\nimport he from 'he';\nimport fetchTrivia from '../actions/fetchTrivia';\nimport TriviaHeader from '../components/TriviaHeader';\nimport Loading from '../components/Loading';\nimport changeScore from '../actions/changeScore';\nimport addAssertion from '../actions/addAssertion';\n\nconst getRandomIndex = (max) => Math.round(Math.random() * max);\n\nconst calculateScore = (timer, difficulty) => {\n  const dif = { hard: 3, medium: 2, easy: 1 };\n  return 10 + (timer * dif[difficulty]);\n};\n\nexport class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      intervalId: 0,\n      incorrectAnswerClass: '',\n      correctAnswerClass: '',\n      randomIndexes: [],\n      timer: 30,\n      disableButton: false,\n      questionIndex: 0,\n      nextButtonClass: 'hide',\n    };\n    this.createAnswersButtons = this.createAnswersButtons.bind(this);\n    this.changeClass = this.changeClass.bind(this);\n    this.createCorrectAnswerIndexes = this.createCorrectAnswerIndexes.bind(this);\n    this.timerCountdown = this.timerCountdown.bind(this);\n    this.incorrectAnswerButton = this.incorrectAnswerButton.bind(this);\n    this.correctAnswerButton = this.correctAnswerButton.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.nextButton = this.nextButton.bind(this);\n    this.addScoreRanking = this.addScoreRanking.bind(this);\n  }\n\n  componentDidMount() {\n    this.timerCountdown();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { results } = this.props;\n    if (results !== prevProps.results && results.length) {\n      this.createCorrectAnswerIndexes();\n    }\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n  }\n\n  timerCountdown() {\n    const intervalId = setInterval(() => {\n      const { timer } = this.state;\n      if (timer > 0) {\n        this.setState((state) => ({ timer: state.timer - 1 }));\n      } else {\n        clearInterval(intervalId);\n        this.changeClass();\n      }\n    }, 1000);\n    this.setState({ intervalId });\n  }\n\n  changeClass() {\n    this.setState({\n      incorrectAnswerClass: 'red-border',\n      correctAnswerClass: 'green-border',\n      disableButton: true,\n      nextButtonClass: '',\n    });\n  }\n\n  incorrectAnswerButton(answer, index) {\n    const { incorrectAnswerClass, disableButton, intervalId } = this.state;\n    return (\n      <li key={answer}>\n        <button\n          data-testid={`wrong-answer-${index}`}\n          type=\"button\"\n          disabled={disableButton}\n          className={`waves-effect deep-orange btn width-90 margin-10p ${incorrectAnswerClass}`}\n          onClick={() => {\n            this.changeClass();\n            clearInterval(intervalId);\n          }}\n        >\n          {he.decode(answer)}\n        </button>\n      </li>\n    );\n  }\n\n  correctAnswerButton() {\n    const { results, changeScr, addAssert } = this.props;\n    const { correctAnswerClass, disableButton, intervalId, timer, questionIndex } = this.state;\n    return (\n      <li key={results[questionIndex].correct_answer}>\n        <button\n          data-testid=\"correct-answer\"\n          className={`waves-effect deep-orange btn width-90 margin-10p ${correctAnswerClass}`}\n          onClick={() => {\n            clearInterval(intervalId);\n            changeScr(calculateScore(timer, results[questionIndex].difficulty));\n            addAssert();\n            this.changeClass();\n          }}\n          type=\"button\"\n          disabled={disableButton}\n        >\n          {he.decode(results[questionIndex].correct_answer)}\n        </button>\n      </li>\n    );\n  }\n\n  createAnswersButtons() {\n    const { results } = this.props;\n    const { randomIndexes, questionIndex } = this.state;\n    const answers = results[questionIndex].incorrect_answers\n      .map((answer, index) => this.incorrectAnswerButton(answer, index));\n    answers.splice(randomIndexes[questionIndex], 0, this.correctAnswerButton());\n    return answers;\n  }\n\n  createCorrectAnswerIndexes() {\n    const { randomIndexes } = this.state;\n    const { results } = this.props;\n    if (results.length > 0 && randomIndexes.length === 0) {\n      const index = Object.values(results)\n        .map((result) => getRandomIndex(result.incorrect_answers.length));\n      this.setState({ randomIndexes: index });\n    }\n  }\n\n  addScoreRanking() {\n    const {\n      player: { name, score, gravatarEmail },\n    } = this.props;\n    const trimmedAndLowercasedMail = gravatarEmail.trim().toLocaleLowerCase();\n    const player = {\n      name,\n      score,\n      picture: `https://www.gravatar.com/avatar/${MD5(trimmedAndLowercasedMail)}`,\n      date: new Date(),\n    };\n    if (!localStorage.getItem('ranking')) {\n      localStorage.setItem('ranking', JSON.stringify([player]));\n    } else {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      ranking.push(player);\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    }\n  }\n\n  nextQuestion() {\n    const { questionIndex } = this.state;\n    const { history } = this.props;\n    if (questionIndex === 4) {\n      history.push('/feedback');\n      this.addScoreRanking();\n    } else {\n      this.setState({\n        questionIndex: questionIndex + 1,\n        timer: 30,\n        nextButtonClass: 'hide',\n        incorrectAnswerClass: '',\n        correctAnswerClass: '',\n        disableButton: false,\n      });\n      this.timerCountdown();\n    }\n  }\n\n  nextButton() {\n    const { nextButtonClass } = this.state;\n    return (\n      <button\n        type=\"button\"\n        className={`waves-effect deep-orange btn margin-10p ${nextButtonClass}`}\n        data-testid=\"btn-next\"\n        onClick={() => this.nextQuestion()}\n      >\n        Next\n      </button>\n    );\n  }\n\n  render() {\n    const { results } = this.props;\n    const { timer, questionIndex } = this.state;\n    if (!results.length) {\n      return <Loading />;\n    }\n    return (\n      <div className=\"row\">\n        <div className=\"white-text container col offset-s4 s4\">\n          <TriviaHeader />\n          <div className=\"black-coral center-align\">\n            <h5 data-testid=\"question-category\">{results[questionIndex].category}</h5>\n            <p data-testid=\"question-text\">\n              {he.decode(results[questionIndex].question)}\n            </p>\n            <p>Timer: {timer}</p>\n            <ul>{this.createAnswersButtons()}</ul>\n            <div className=\"center-align\">{this.nextButton()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  { fetch: fetchTrivia, changeScr: changeScore, addAssert: addAssertion },\n  dispatch,\n);\n\nconst mapStateToProps = (state) => ({\n  results: state.gameReducer.trivia.results,\n  player: state.userReducer.player,\n  category: state.settingReducer.category,\n  difficulty: state.settingReducer.difficulty,\n  type: state.settingReducer.type,\n});\n\nGame.propTypes = {\n  changeScr: PropTypes.func.isRequired,\n  addAssert: PropTypes.func.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  player: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Game));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RankLine = ({ index, ranking }) => (\n  <li>\n    <div>\n      <img\n        src={ranking.picture}\n        alt={ranking.name}\n        className=\"circle\"\n        style={{ width: '50px', verticalAlign: '-20px', margin: '10px' }}\n      />\n      <span data-testid={`player-name-${index}`}>{ranking.name}</span>\n      <span> did </span>\n      <span data-testid={`player-score-${index}`}>{ranking.score}</span>\n      <span> points.</span>\n    </div>\n  </li>\n);\n\nRankLine.propTypes = {\n  index: PropTypes.number.isRequired,\n  ranking: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default RankLine;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport RankLine from '../components/RankLine';\n\nconst Ranking = () => {\n  const rankedLadder = localStorage.getItem('ranking') !== null\n    ? JSON.parse(localStorage.getItem('ranking'))\n    : { ranking: { name: '', score: '', picture: '' } };\n  return (\n    <div className=\"row\">\n      <div className=\"col s4 offset-s4 white-text black-coral\">\n        <header className=\"center-align\">\n          <h1 data-testid=\"ranking-title\">Ranking</h1>\n        </header>\n        <ol>\n          {rankedLadder\n            .map((ranking, index) => (\n              <RankLine key={ranking.date} ranking={ranking} index={index} />\n            ))\n            .sort((rankA, rankB) => rankB.props.ranking.score - rankA.props.ranking.score)}\n        </ol>\n        <section className=\"center-align margin-10p\">\n          <Link\n            data-testid=\"btn-go-home\"\n            to=\"/\"\n            className=\"waves-effect deep-orange btn margin-10p width-40\"\n          >\n            BACK\n          </Link>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Ranking;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TriviaHeader from '../components/TriviaHeader';\n\nconst linkSection = () => (\n  <section>\n    <div>\n      <Link\n        data-testid=\"btn-ranking\"\n        to=\"/ranking\"\n        className=\"waves-effect deep-orange btn margin-10p width-40\"\n      >\n        RANKING\n      </Link>\n    </div>\n    <div>\n      <Link\n        data-testid=\"btn-play-again\"\n        to=\"/\"\n        className=\"waves-effect deep-orange btn margin-10p width-40\"\n      >\n        PLAY AGAIN\n      </Link>\n    </div>\n  </section>\n);\n\nconst Feedback = () => {\n  const state = localStorage.getItem('state')\n    ? JSON.parse(localStorage.getItem('state'))\n    : { player: { assertions: '', score: '' } };\n  const { assertions, score } = state.player;\n  const answerTitle = assertions >= 3 ? 'Mandou bem!' : 'Podia ser melhor...';\n  return (\n    <div className=\"row\">\n      <div className=\"col s4 offset-s4\">\n        <TriviaHeader />\n        <div className=\"center-align white-text black-coral\">\n          <h5 data-testid=\"feedback-text\">{answerTitle}</h5>\n          <p>\n            You got\n            <span data-testid=\"feedback-total-question\">{` ${assertions || 0} `}</span>\n            questions,\n          </p>\n          <p>\n            and did <span data-testid=\"feedback-total-score\">{score || 0}</span> points\n          </p>\n          {linkSection()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  REQUEST_TOKEN, RECEIVE_TOKEN_SUCCESS, RECEIVE_TOKEN_FAILURE,\n} from '../actions/types';\n\nlet token = [];\nlet tokenIsFetching = true;\n\nif (localStorage.getItem('token')) {\n  token = JSON.parse(localStorage.getItem('token'));\n  tokenIsFetching = false;\n}\n\nconst initialState = {\n  tokenIsFetching,\n  token,\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REQUEST_TOKEN:\n      return { ...state, tokenIsFetching: true };\n    case RECEIVE_TOKEN_SUCCESS:\n      return { ...state, tokenIsFetching: false, token: payload };\n    case RECEIVE_TOKEN_FAILURE:\n      return { ...state, tokenIsFetching: false, error: payload };\n    default:\n      return state;\n  }\n};\n","import { REQUEST_TRIVIA, RECEIVE_TRIVIA_SUCCESS, RECEIVE_TRIVIA_FAILURE, RESET_TRIVIA } from '../actions/types';\n\nconst initialState = {\n  gameIsFetching: true,\n  trivia: { results: [] },\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case REQUEST_TRIVIA:\n      return { ...state, gameIsFetching: true };\n    case RECEIVE_TRIVIA_SUCCESS:\n      return {\n        gameIsFetching: false,\n        trivia: { results: [...payload.results] },\n      };\n    case RECEIVE_TRIVIA_FAILURE:\n      return { ...state, gameIsFetching: false, error: payload };\n    case RESET_TRIVIA:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { CHANGE_USER_INFO, CHANGE_SCORE, ADD_ASSERTION, RESET_USER } from '../actions/types';\n\nconst initialState = {\n  player: {\n    score: 0,\n    name: '',\n    gravatarEmail: '',\n    assertions: 0,\n  },\n};\n\nexport default (state = initialState, { type, name, gravatarEmail, score }) => {\n  switch (type) {\n    case CHANGE_USER_INFO:\n      localStorage.setItem('state', JSON.stringify({ player: { ...state.player, name, gravatarEmail } }));\n      return { ...state, player: { ...state.player, name, gravatarEmail } };\n    case CHANGE_SCORE:\n      localStorage.setItem('state', JSON.stringify({ player: { ...state.player, score: state.player.score + score } }));\n      return { ...state, player: { ...state.player, score: state.player.score + score } };\n    case ADD_ASSERTION:\n      localStorage.setItem('state', JSON.stringify({ player: { ...state.player, assertions: state.player.assertions + 1 } }));\n      return { ...state, player: { ...state.player, assertions: state.player.assertions + 1 } };\n    case RESET_USER:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { CHANGE_CATEGORY, CHANGE_DIFFICULTY, CHANGE_TYPE } from '../actions/types';\n\nconst initialState = {\n  category: '',\n  difficulty: '',\n  type: '',\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case CHANGE_CATEGORY:\n      return { ...state, category: payload };\n    case CHANGE_DIFFICULTY:\n      return { ...state, difficulty: payload };\n    case CHANGE_TYPE:\n      return { ...state, type: payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport tokenReducer from './tokenReducer';\nimport gameReducer from './gameReducer';\nimport userReducer from './userReducer';\nimport settingReducer from './settingReducer';\n\nconst rootReducer = combineReducers({ tokenReducer, gameReducer, userReducer, settingReducer });\n\nexport default rootReducer;\n","import {\n  createStore, applyMiddleware, compose,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst composeEnhancers = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n) || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Game from './pages/Game';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\n\nexport default function App() {\n  return (\n    <Router>\n      <Header>\n        <Switch>\n          <Route path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route path=\"/game\">\n            <Game />\n          </Route>\n          <Route path=\"/ranking\">\n            <Ranking />\n          </Route>\n          <Route path=\"/feedback\">\n            <Feedback />\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n        </Switch>\n        <Footer />\n      </Header>\n    </Router>\n  );\n}\n"],"sourceRoot":""}